name: Github Actions CI
'on': push
jobs:
  Lint_dependency-scanning:
    runs-on: sta-runner
    container: pipelinecomponents/php-security-checker:latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3
      - name: Check Out dependency-scanning step 0
        run: >-
          cd ${COMPOSER_LOCATION:-.} && security-checker security:check
          composer.lock
      - name: Check Out dependency-scanning step 1
        run: rm composer.lock
    continue-on-error: true
    if: ${{ !contains(fromJson('["staging","master"]'), github.ref_name) }}
  test_phpunit:
    runs-on: sta-runner
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3
      - name: Check Out phpunit step 0
        run: php -v
      - name: Check Out phpunit step 1
        run: >-
          sudo cp /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
          /usr/local/etc/php/conf.d/docker-php-ext-xdebug.bak
      - name: Check Out phpunit step 2
        run: echo "" | sudo tee /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
      - name: Check Out phpunit step 3
        run: >-
          mysql --host="${DB_HOST}" --user="${MYSQL_USER}"
          --password="${MYSQL_PASSWORD}" "${MYSQL_DATABASE}" < db.sql
      - name: Check Out phpunit step 4
        run: ./vendor/phpunit/phpunit/phpunit --version
      - name: Check Out phpunit step 5
        run: >-
          php -d short_open_tag=off ./vendor/phpunit/phpunit/phpunit -v
          --colors=never --stderr
      - name: Check Out phpunit step 6
        run: >-
          sudo cp /usr/local/etc/php/conf.d/docker-php-ext-xdebug.bak
          /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
    if: contains(fromJson('["master","staging"]'), github.ref_name)
